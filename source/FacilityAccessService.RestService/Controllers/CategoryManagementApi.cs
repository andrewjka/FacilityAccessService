/*
 * Facility Access Service API
 *
 * The service an access control system for facilities within the enterprise territory.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using FacilityAccessService.RestService.Models;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;

namespace FacilityAccessService.RestService.Controllers
{
    /// <summary>
    /// </summary>
    [ApiController]
    public class CategoryManagementApiController : ControllerBase
    {
        /// <summary>
        ///     Creates a category and returns it.
        /// </summary>
        /// <param name="createCategoryRequest"></param>
        /// <response code="200">Category.</response>
        [HttpPost]
        [Route("/categories")]
        [Consumes("application/json")]
        [SwaggerOperation("CreateCategory")]
        [SwaggerResponse(statusCode: 200, type: typeof(Category), description: "Category.")]
        public IActionResult CreateCategory([FromBody] CreateCategoryRequest createCategoryRequest)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        ///     Deletes category by id.
        /// </summary>
        /// <param name="id"></param>
        /// <response code="200">Category successfully deleted.</response>
        [HttpDelete]
        [Route("/categories/{id}")]
        [SwaggerOperation("DeleteCategory")]
        public IActionResult DeleteCategory([FromRoute(Name = "id")] [Required] string id)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        ///     Returns all categories according to the conditions.
        /// </summary>
        /// <param name="take"></param>
        /// <param name="offset"></param>
        /// <param name="name"></param>
        /// <response code="200">A list of categories that match the provided query parameters.</response>
        [HttpGet]
        [Route("/categories")]
        [SwaggerOperation("GetAllCategories")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Category>),
            description: "A list of categories that match the provided query parameters.")]
        public IActionResult GetAllCategories(
            [FromQuery(Name = "take")] [Required] [Range(1, 100)]
            int take,
            [FromQuery(Name = "offset")] [Required]
            int offset, [FromQuery(Name = "name")] string name
        )
        {
            throw new NotImplementedException();
        }

        /// <summary>
        ///     Updates a category partially.
        /// </summary>
        /// <param name="id"></param>
        /// <param name="updateFacilityRequest"></param>
        /// <response code="200">Category successfully updated..</response>
        [HttpPatch]
        [Route("/categories/{id}")]
        [Consumes("application/json")]
        [SwaggerOperation("UpdateCategory")]
        [SwaggerResponse(statusCode: 200, type: typeof(Category), description: "Category successfully updated..")]
        public IActionResult UpdateCategory(
            [FromRoute(Name = "id")] [Required] string id,
            [FromBody] UpdateFacilityRequest updateFacilityRequest
        )
        {
            throw new NotImplementedException();
        }
    }
}
/*
 * Facility Access Service API
 *
 * The service an access control system for facilities within the enterprise territory.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using FacilityAccessService.RestService.Models;

namespace FacilityAccessService.RestService.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UserManagementApiController : ControllerBase
    {
        /// <summary>
        /// Gets a list of all users.
        /// </summary>
        /// <param name="take"></param>
        /// <param name="offset"></param>
        /// <response code="200">A list of all users.</response>
        [HttpGet]
        [Route("/users/")]
        [SwaggerOperation("GetAllUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<User>), description: "A list of all users.")]
        public async Task<IActionResult> GetAllUsers(
            [FromQuery(Name = "take")] [Range(1, 100)]
            decimal? take,
            [FromQuery(Name = "offset")] [Range(1, 100)]
            decimal? offset)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// Gets the user.
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="searchName"></param>
        /// <response code="200">The user.</response>
        [HttpGet]
        [Route("/users/{user_id}")]
        [SwaggerOperation("GetUser")]
        [SwaggerResponse(statusCode: 200, type: typeof(User), description: "The user.")]
        public async Task<IActionResult> GetUser(
            [FromRoute(Name = "user_id")] [Required]
            string userId,
            [FromQuery(Name = "searchName")] string searchName)
        {
            throw new NotImplementedException();
        }
    }
}
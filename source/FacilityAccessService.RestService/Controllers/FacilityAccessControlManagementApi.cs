/*
 * Facility Access Service API
 *
 * The service an access control system for facilities within the enterprise territory.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.ComponentModel.DataAnnotations;
using FacilityAccessService.RestService.Models;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;

namespace FacilityAccessService.RestService.Controllers
{
    /// <summary>
    /// </summary>
    [ApiController]
    public class FacilityAccessControlManagementApiController : ControllerBase
    {
        /// <summary>
        ///     Gets a list of facilities to which the user has access.
        /// </summary>
        /// <param name="userId"></param>
        /// <response code="200">List of categories to which the user has access.</response>
        [HttpGet]
        [Route("/users/{user_id}/access/facilities")]
        [SwaggerOperation("GetAccessUserFacilities")]
        [SwaggerResponse(statusCode: 200, type: typeof(Facility),
            description: "List of categories to which the user has access.")]
        public IActionResult GetAccessUserFacilities([FromRoute(Name = "user_id")] [Required] string userId)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        ///     Creates user access to a facility.
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="grantUserAccessFacilityRequest"></param>
        /// <response code="200">Access to the facility issued.</response>
        [HttpPost]
        [Route("/users/{user_id}/access/facilities")]
        [Consumes("application/json")]
        [SwaggerOperation("GrantUserAccessFacility")]
        public IActionResult GrantUserAccessFacility(
            [FromRoute(Name = "user_id")] [Required]
            string userId,
            [FromBody] GrantUserAccessFacilityRequest grantUserAccessFacilityRequest
        )
        {
            throw new NotImplementedException();
        }

        /// <summary>
        ///     Removes facility access from the user.
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="facilityId"></param>
        /// <response code="200">Access to the facility has been successfully removed.</response>
        [HttpDelete]
        [Route("/users/{user_id}/access/facilities/{facility_id}")]
        [SwaggerOperation("RevokeUserAccessFacility")]
        public IActionResult RevokeUserAccessFacility(
            [FromRoute(Name = "user_id")] [Required]
            string userId,
            [FromRoute(Name = "facility_id")] [Required]
            string facilityId
        )
        {
            throw new NotImplementedException();
        }
    }
}